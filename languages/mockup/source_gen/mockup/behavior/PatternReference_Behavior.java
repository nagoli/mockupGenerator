package mockup.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import java.util.List;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.internal.collections.runtime.IVisitor;
import jetbrains.mps.smodel.behaviour.BehaviorReflection;

public class PatternReference_Behavior {
  public static void init(SNode thisNode) {
  }

  public static SNode virtual_evaluate_6035835504269173056(SNode thisNode, final List<SNode> binding) {
    SNode result = SNodeOperations.copyNode(thisNode);
    ListSequence.fromList(SLinkOperations.getTargets(result, "parameterValues", true)).visitAll(new IVisitor<SNode>() {
      public void visit(SNode it) {
        SLinkOperations.setTarget(it, "value", BehaviorReflection.invokeVirtual((Class<SNode>) ((Class) Object.class), SLinkOperations.getTarget(it, "value", true), "virtual_evaluate_6035835504269252966", new Object[]{binding}), true);
      }
    });
    return result;
  }

  public static SNode call_evaluate_6035835504270072636(SNode thisNode) {
    return BehaviorReflection.invokeVirtual((Class<SNode>) ((Class) Object.class), SLinkOperations.getTarget(SLinkOperations.getTarget(thisNode, "pattern", false), "content", true), "virtual_evaluate_6035835504269173056", new Object[]{SLinkOperations.getTargets(thisNode, "parameterValues", true)});
  }
}
