package mockup.generator.template.main;

/*Generated by MPS */

import jetbrains.mps.generator.runtime.Generated;
import jetbrains.mps.generator.template.PropertyMacroContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.generator.template.ReferenceMacroContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.generator.template.IfMacroContext;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodeContext;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.List;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.generator.template.TemplateQueryContext;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodesContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;

@Generated
public class QueriesGenerated {
  public final boolean NEEDS_OPCONTEXT = false;

  public static Object propertyMacro_GetPropertyValue_8429808266675795839(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), "title");
  }

  public static Object propertyMacro_GetPropertyValue_8429808266675749057(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), "text");
  }

  public static Object propertyMacro_GetPropertyValue_8429808266675808335(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), "text");
  }

  public static Object propertyMacro_GetPropertyValue_8429808266675816272(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), "id");
  }

  public static Object propertyMacro_GetPropertyValue_8429808266675826153(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), "label");
  }

  public static Object propertyMacro_GetPropertyValue_8429808266675840398(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), "value");
  }

  public static Object referenceMacro_GetReferent_7308103362967223220(final ReferenceMacroContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "parameter", false);
  }

  public static boolean ifMacro_Condition_8429808266675841960(final IfMacroContext _context) {
    return isNotEmptyString(SPropertyOperations.getString(_context.getNode(), "value"));
  }

  public static SNode sourceNodeQuery_7308103362967207653(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), "pattern", false), "content", true);
  }

  public static SNode sourceNodeQuery_6484469149691797090(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "libelle", true);
  }

  public static SNode sourceNodeQuery_6035835504269778874(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "text", true);
  }

  public static SNode sourceNodeQuery_7308103362967292598(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "libelle", true);
  }

  public static SNode sourceNodeQuery_7308103362967290320(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "text", true);
  }

  public static SNode sourceNodeQuery_7308103362966854097(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(ListSequence.fromList(((List<SNode>) _context.getVariable("binding"))).findFirst(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SLinkOperations.getTarget(it, "parameter", false) == SLinkOperations.getTarget(_context.getNode(), "parameter", false);
      }
    }), "value", true);
  }

  public static Object templateArgumentQuery_7308103362966979213(final TemplateQueryContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "parameterValues", true);
  }

  public static Iterable<SNode> sourceNodesQuery_6484469149691704182(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "steps", true);
  }

  public static Iterable<SNode> sourceNodesQuery_6035835504270838426(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(SNodeOperations.as(SNodeOperations.getParent(_context.getNode()), "mockup.structure.Mockup"), "top", true);
  }

  public static Iterable<SNode> sourceNodesQuery_6035835504269676127(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "content", true);
  }

  public static Iterable<SNode> sourceNodesQuery_6035835504270863250(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(SNodeOperations.as(SNodeOperations.getParent(_context.getNode()), "mockup.structure.Mockup"), "bottom", true);
  }

  public static Iterable<SNode> sourceNodesQuery_6035835504269806697(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "values", true);
  }

  public static Iterable<SNode> sourceNodesQuery_6035835504269777988(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "content", true);
  }

  public static Iterable<SNode> sourceNodesQuery_7308103362966762999(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "content", true);
  }

  public static Iterable<SNode> sourceNodesQuery_7308103362966840482(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "values", true);
  }

  public static Iterable<SNode> sourceNodesQuery_7308103362967222334(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "parameterValues", true);
  }

  public static Iterable<SNode> sourceNodesQuery_8429808266675813683(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "elements", true);
  }

  private static boolean isNotEmptyString(String str) {
    return str != null && str.length() > 0;
  }
}
